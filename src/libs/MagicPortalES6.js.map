{"version":3,"file":"index.es6.js","sources":["../index.js"],"sourcesContent":["class _MagicPortalImplementation {\n  constructor(channel) {\n    this.rpc_counter = 0\n    this.channel = channel\n    this.foreign = new Map()\n    this.local = new Map()\n    this.calls = new Map()\n    this.queue = []\n    this.connectionEstablished = false\n    this.channel.addEventListener('message', ({data}) => {\n      if (!data) return\n      if (typeof data !== 'object') return\n      switch (data.type) {\n        case 'MP_INIT': return this.onInit(data)\n        case 'MP_SET': return this.onSet(data)\n        case 'MP_CALL': return this.onCall(data)\n        case 'MP_RETURN': return this.onReturn(data)\n      }\n    })\n    this.channel.postMessage({type: 'MP_INIT', id: 1, reply: true})\n  }\n  onInit(data) {\n    this.connectionEstablished = true\n    let queue = this.queue\n    this.queue = []\n    for (let msg of queue) {\n      this.channel.postMessage(msg)\n    }\n    if (data.reply) {\n      this.channel.postMessage({type: 'MP_INIT', reply: false})\n    }\n  }\n  onSet(data) {\n    const proxy = {}\n    const { object } = data\n    for (let method of data.methods) {\n      let reply = !data.void.includes(method)\n      proxy[method] = (...args) => {\n        this.rpc_counter = (this.rpc_counter + 1) % Number.MAX_SAFE_INTEGER\n        // Send message to worker\n        return new Promise((resolve, reject) => {\n          this.postMessage({ type: 'MP_CALL', object, method, id: this.rpc_counter, args, reply })\n          if (reply) {\n            this.calls.set(this.rpc_counter, {resolve, reject})\n          } else {\n            resolve()\n          }\n        })\n      }\n    }\n    // previous value might be a promise created by 'get'\n    let prev = this.foreign.get(data.object)\n    // insert the newly created proxy value where the promise was\n    this.foreign.set(data.object, proxy)\n    // resolve that promise\n    if (typeof prev === 'function') prev(proxy)\n  }\n  onCall(data) {\n    let object = this.local.get(data.object)\n    if (object) {\n      object[data.method](...data.args)\n      .then(result => data.reply && this.channel.postMessage({ type: 'MP_RETURN', id: data.id, result }))\n      .catch(err => this.channel.postMessage({ type: 'MP_RETURN', id: data.id, error: err.message }))\n    }\n  }\n  onReturn(data) {\n    if (this.calls.has(data.id)) {\n      let {resolve, reject} = this.calls.get(data.id)\n      this.calls.clear(data.id)\n      data.error ? reject(data.error) : resolve(data.result)\n    }\n  }\n  postMessage(data) {\n    if (this.connectionEstablished) {\n      this.channel.postMessage(data)\n    } else {\n      this.queue.push(data)\n    }\n  }\n  set(name, object, opts = {}) {\n    this.local.set(name, object)\n    // Send a descriptor of the object to the other side\n    let methods = Object.entries(object)\n      .filter(([key, val]) => typeof val === 'function')\n      .map(([key, val]) => key)\n    this.postMessage({\n      type: 'MP_SET',\n      object: name,\n      methods,\n      void: opts.void || []\n    })\n  }\n  async get(name) {\n    if (this.foreign.has(name)) {\n      return this.foreign.get(name)\n    } else {\n      // We set the `resolve` callback into the Map so we can resolve it later\n      return new Promise((resolve, reject) => this.foreign.set(name, resolve))\n    }\n  }\n}\n\n// Reduce the API that's exposed by console.log\nexport default class MagicPortal {\n  constructor(channel) {\n    const mp = new _MagicPortalImplementation(channel)\n    Object.defineProperties(this, {\n      get: {\n        writable: false,\n        configurable: false,\n        value: mp.get.bind(mp)\n      },\n      set: {\n        writable: false,\n        configurable: false,\n        value: mp.set.bind(mp)\n      }\n    })\n  }\n}\n"],"names":["_MagicPortalImplementation","channel","this","rpc_counter","foreign","Map","local","calls","queue","connectionEstablished","addEventListener","ref","data","type","onInit","onSet","onCall","onReturn","postMessage","let","reply","proxy","method","void","includes","Number","MAX_SAFE_INTEGER","Promise","resolve","reject","object","id","args","set","methods","prev","get","then","result","catch","err","error","message","has","clear","push","name","opts","Object","entries","filter","map","mp","defineProperties","bind"],"mappings":"AAAA,IAAMA,EACJ,SAAYC,cACVC,KAAKC,YAAc,EACnBD,KAAKD,QAAUA,EACfC,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,MAAQ,IAAID,IACjBH,KAAKK,MAAQ,IAAIF,IACjBH,KAAKM,MAAQ,GACbN,KAAKO,uBAAwB,EAC7BP,KAAKD,QAAQS,iBAAiB,mBAAYC,mBACnCC,GACe,iBAATA,SACHA,EAAKC,MACX,IAAK,UAAW,OAAOX,EAAKY,OAAOF,GACnC,IAAK,SAAU,OAAOV,EAAKa,MAAMH,GACjC,IAAK,UAAW,OAAOV,EAAKc,OAAOJ,GACnC,IAAK,YAAa,OAAOV,EAAKe,SAASL,MAG3CV,KAAKD,QAAQiB,YAAY,MAAO,aAAe,SAAU,iBAE3DJ,gBAAOF,GACLV,KAAKO,uBAAwB,EAC7BU,IAAIX,EAAQN,KAAKM,MACjBN,KAAKM,MAAQ,OACR,UAAWA,kBAAO,CACrBN,KAAKD,QAAQiB,kBAEXN,EAAKQ,OACPlB,KAAKD,QAAQiB,YAAY,MAAO,iBAAkB,iBAGtDH,eAAMH,GAGJ,eAFMS,EAAQ,2BAETF,IAAIG,OACHF,GAASR,EAAKW,KAAKC,SAASF,KAC1BA,4EACJpB,EAAKC,aAAeD,EAAKC,YAAc,GAAKsB,OAAOC,iBAE5C,IAAIC,iBAASC,EAASC,KACtBX,YAAY,MAAQ,iBAAWY,SAAQR,EAAQS,GAAI7B,EAAKC,iBAAa6B,QAAMZ,IAC5EA,IACGb,MAAM0B,IAAI/B,EAAKC,YAAa,SAACyB,SAASC,kBARhCjB,EAAKsB,4BAgBxBf,IAAIgB,EAAOjC,KAAKE,QAAQgC,IAAIxB,EAAKkB,QAEjC5B,KAAKE,QAAQ6B,IAAIrB,EAAKkB,OAAQT,GAEV,mBAATc,GAAqBA,EAAKd,gBAEvCL,gBAAOJ,cACDkB,EAAS5B,KAAKI,MAAM8B,IAAIxB,EAAKkB,QAC7BA,KACKlB,EAAKU,cAAQQ,EAAGlB,EAAKoB,MAC3BK,cAAKC,UAAU1B,EAAKQ,OAASlB,EAAKD,QAAQiB,YAAY,MAAQ,YAAaa,GAAInB,EAAKmB,UAAIO,MACxFC,eAAMC,UAAOtC,EAAKD,QAAQiB,YAAY,MAAQ,YAAaa,GAAInB,EAAKmB,GAAIU,MAAOD,EAAIE,yBAGxFzB,kBAASL,MACHV,KAAKK,MAAMoC,IAAI/B,EAAKmB,IAAK,OACH7B,KAAKK,MAAM6B,IAAIxB,EAAKmB,gCACvCxB,MAAMqC,MAAMhC,EAAKmB,IACtBnB,EAAK6B,MAAQZ,EAAOjB,EAAK6B,OAASb,EAAQhB,EAAK0B,sBAGnDpB,qBAAYN,GACNV,KAAKO,2BACFR,QAAQiB,YAAYN,QAEpBJ,MAAMqC,KAAKjC,gBAGpBqB,aAAIa,EAAMhB,EAAQiB,kBAAO,SAClBzC,MAAM2B,IAAIa,EAAMhB,GAErBX,IAAIe,EAAUc,OAAOC,QAAQnB,GAC1BoB,gBAAQvC,SAA8B,0BACtCwC,aAAKxC,sBACHO,YAAY,MACT,gBACE4B,UACRZ,EACAX,KAAMwB,EAAKxB,MAAQ,kBAGjBa,aAAIU,sDACJ5C,KAAKE,QAAQuC,IAAIG,KACZ5C,KAAKE,QAAQgC,IAAIU,MAGjB,IAAInB,iBAASC,EAASC,UAAW3B,EAAKE,QAAQ6B,IAAIa,EAAMlB,mCAOnE,SAAY3B,OACJmD,EAAK,IAAIpD,EAA2BC,GAC1C+C,OAAOK,iBAAiBnD,KAAM,CAC5BkC,IAAK,WACO,gBACI,QACPgB,EAAGhB,IAAIkB,KAAKF,IAErBnB,IAAK,WACO,gBACI,QACPmB,EAAGnB,IAAIqB,KAAKF"}